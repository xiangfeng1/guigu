
Thread类中非常重要的：
（1）public void run()
（2）public void start()

Thread类中的其他API方法：
（3）public static void sleep(时间)：休眠一段时间之后再继续，时间的单位是毫秒
（4）public String getName()/void setName(线程名)
默认的线程名称：Thread-0,Thread-1
（5）public static Thread currentThread()：获取正在执行这句代码的线程对象
（6）public int getPriority()/void setPriority(int)
    IllegalArgumentException - 如果优先级不在 MIN_PRIORITY 到 MAX_PRIORITY 范围内，会发生该异常。
    注意：
    A：优先级有范围
    B：优先级高的不是一定百分百先执行完，才轮到优先级低的。线程调度时，除了考虑优先级还要考虑公平性。

（7）public final boolean isAlive()：用于判断某个线程是否还活着。
（8）public static void yield()：当前线程先让出CPU，“希望”其他线程先执行
（9）public void join()：当前线程“被”“阻塞”/“加塞”，加入的线程会先执行。
                当前线程是指执行这句语句的线程。
                加入的线程：调用join方法的线程。
                    加入的线程会一直执行，直到加入的线程执行完，之后被加塞的线程才能继续。
   public void join(时间)：当前线程“被”“阻塞”/“加塞”，加入的线程会先执行。时间单位也是毫秒。
                    加入的线程只是先执行一段时间，之后被加塞的线程就和他并列了。

案例：
- 声明一个匿名内部类继承Thread类，重写run方法，实现打印[1,100]之间的偶数，要求每隔1秒打印1个偶数。
- 声明一个匿名内部类继承Thread类，重写run方法，实现打印[1,100]之间的奇数，
  - 当打印到5时，让奇数线程暂停一下，再继续。
  - 当打印到5时，让奇数线程停下来，让偶数线程执行完再打印。
  - 当打印到5时，让奇数线程停下来，让偶数线程先执行10秒完再打印。

案例：
声明一个PrintEvenThread线程类，继承Thread类，重写run方法，实现打印[1,100]之间的偶数，要求每隔1毫秒打印1个偶数。
声明一个PrintOddThread线程类，继承Thread类，重写run方法，实现打印[1,100]之间的奇数。
在main线程中：
（1）创建两个线程对象，并启动两个线程
（2）当打印奇数的线程结束了，让偶数的线程也停下来，就算偶数线程没有全部打印完[1,100]之间的偶数。


有一种线程，它是在后台运行的，它的任务是为其他线程提供服务的，这种线程被称为“守护线程”。JVM的垃圾回收线程就是典型的守护线程。
守护线程有个特点，就是如果所有非守护线程都死亡，那么守护线程自动死亡。
调用setDaemon(true)方法可将指定线程设置为守护线程。必须在线程启动之前设置，否则会报IllegalThreadStateException异常。
调用isDaemon()可以判断线程是否是守护线程。
